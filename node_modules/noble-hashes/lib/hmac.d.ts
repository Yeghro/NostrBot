import { Hash, CHash, Input } from './utils';
declare class HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {
    oHash: T;
    iHash: T;
    blockLen: number;
    outputLen: number;
    finished: boolean;
    constructor(hash: CHash, _key: Input);
    update(buf: Input): this;
    _writeDigest(out: Uint8Array): void;
    digest(): Uint8Array;
    _cloneInto(to?: HMAC<T>): HMAC<T>;
    _clean(): void;
}
export declare const hmac: {
    (hash: CHash, key: Input, message: Input): Uint8Array;
    create(hash: CHash, key: Input): HMAC<Hash<unknown>>;
    init: (hash: CHash, key: Input) => HMAC<Hash<unknown>>;
};
export {};
